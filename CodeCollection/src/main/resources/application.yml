
server:
  port: 8086
#  servlet:
#    context-path: /guide
thymeleaf:
  prefix: classpath:/templates/
#=============================== mybatis&mysql ========================================

mybatis:
  mapper-locations: classpath:com.example.guide.dao/*Mapper.xml
  type-aliases-package: com.example.guide.dao
spring:
  datasource:
    username: root
    password: 222222
    url: jdbc:mysql://localhost:3306/guide
    driver-class-name: com.mysql.cj.jdbc.Driver

#================================== Druid连接池 ========================================
#    validationQuery = "SELECT 1"  验证连接是否可用，使用的SQL语句
#    testWhileIdle = "true"      指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
#    testOnBorrow = "false"   借出连接时不要测试，否则很影响性能
#    timeBetweenEvictionRunsMillis = "30000"  每30秒运行一次空闲连接回收器
#    minEvictableIdleTimeMillis = "1800000"  池中的连接空闲30分钟后被回收,默认值就是30分钟。
#    numTestsPerEvictionRun="3" 在每次空闲连接回收器线程(如果有)运行时检查的连接数量，默认值就是3.
    filters: stat
    initialSize: 2
    maxActive: 300
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: false
    maxPoolPreparedStatementPerConnectionSize: 200
#================================== redis =============================================

  redis:
    ## Redis数据库索引（默认为0）
    database: 0
    ## Redis服务器地址
    host: localhost
    ## Redis服务器连接端口
    port: 6379
    ## Redis服务器连接密码（默认为空）
    password:
    jedis:
      pool:
        ## 连接池最大连接数（使用负值表示没有限制）
        #spring.redis.pool.max-active=8
        max-active: 8
        ## 连接池最大阻塞等待时间（使用负值表示没有限制）
        #spring.redis.pool.max-wait=-1
        max-wait: -1
        ## 连接池中的最大空闲连接
        #spring.redis.pool.max-idle=8
        max-idle: 8
        ## 连接池中的最小空闲连接
        #spring.redis.pool.min-idle=0
        min-idle: 0
    ## 连接超时时间（毫秒）
    timeout: 1200
#================================== 自定义字段 ==========================================
##自定义字段
#搜索范围
searchBound: /Users/lidongqi/Desktop
##定时任务开关，只有值为true时才生效
enable:
  scheduled: false
  redis: false
  mysql: true
  name: 2222222
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
